
Salut!

Je propose ce fichier pour que l'on note les avancées qu'on a fait sur le boulot, ça sera un peu long à faire mais on a moyen
de mieux bosser en équipe!

24/03 :

Modification majeure (= sur plusieurs fichiers à la fois):

- Suppression du système de dictionnaire, mise en place d'une sous-carte.

Motif : plus je réfléchissais à ce système, plus ça me semblait compliqué : il fallait mettre à jour les dictionnaires d'ennemis 
à chaque déplacement, sachant qu'un dictionnaire est compliqué à manipuler ... 
L'avantage d'une sous-carte est que, même si ça prend beaucoup de place, ça a un aspect plus "visible" pour les tests et ça devrait
pas mal réduire les calculs pour le combat et les problèmes de collision. En plus, on peut supprimer comme ça les listes des 
ennemis de chaque joueur.
On va quand même les garder pour le moment, au cas où.

J'ai également gardé sur mon PC des sauvegardes des fichiers sans la sous-carte.


- MAJ des noms d'insectes.
J'ai choisi scorpion pour l'unité remplaçant la fourmi.


- MAJ des méthodes de combat pour chaque unité.
La MAJ prend en compte la mise en place d'une sous-carte.


- Ajout des méthodes de combat pour les IA.



Sur le fichier batiment : 

- Mise en place des méthodes pour obtenir l'identifiant complet de ceux-ci ( T_car() ).

25/03- 2h10-Clome01
Excelente idée le texte, comme ça on se souviendra pourquoi on a fait tel ou tel changement. Cela sera une bonne chose
pour le rapport.

Donc j'ai fini de mettre unTour dans une classe à part de tel façon que le jeu continue de tourner.
J'ai également créé une classe Constante (sorry, une classe en plus) car je commençais à me perdre avec plein de constantes
identiques partouts (et c'est plus simple pour les test). La au moins elles sont en un seul exemplaire et facile à récuperer 
(libre a toi de l'utiliser pour tes constantes ou pas).
J'ai également appelé les unitées IA Scorpion1 et Scorpion2 pour que ça reste logique avec toi.
Je pense qu'il faudra renommer IA_facile en unite_IA, cela me semble plus logique.

-MAJ de Un_Tour_Joueur
-MAJ des constantes pour Map, Un_Tour_Du_Joueur, Batiment et IA_facile
-MAJ nom en français comme on avait dit

Sur le fichier IA_facile:
  - Mise en place des méthodes pour obtenir l'identifiant complet de ceux-ci ( T_car() ).
  
25/03 - 18h - XV25

Sur tes remarques : 

*Aucun problème pour renommer le fichier IA : ça serait unites_IA_facile, pour ne pas confondre avec les unités de niveau
supérieur.

*Pour la classe Constante, je suis partagé. D'un côté, ça force à charger un fichier de plus, et également à faire un passage
vers une autre classe uniquement pour trouver une valeur. De l'autre, ça va énormément simplifier l'équilibrage du jeu! On aura
juste à modifier un fichier pour modifier la jouabilité.
Donc je suis pour qu'on garde pour le moment; et dès qu'on aura trouvé des valeurs satisfaisantes, on la supprimera pour mettre
nos constantes définitives dans les fichiers.

Sur tes programmes :

*Tu as supprimé ma MAJ au niveau de Map :c
J'ai corrigé ça. N'oublie pas : à chaque fois que tu recommences à travailler sur le projet, retélécharge tous les fichiers
sur ce site. Et ne réuploade pas des fichiers si il y a une MAJ sur le site.

*Au niveau de tes programmes, prends en compte l'ajout de la sous-carte pour la gestion des collisions (ne pas vérifier le nom
de l'unité, mais si la case est un ' ').
Egalement, il va falloir modifier tes méthodes de déplacement en conséquence : l'unité doit d'abord situer tous les objets dans
sa zone de déplacement et en déduire les cases vides (inspire-toi de la méthode combat() ). Il choisit alors une case parmi 
celles-ci pour se rapprocher du QG.

*Je n'aime pas trop également l'option self.name que tu as mis un peu partout au niveau de tes programmes... le gros inconvénient
de ça, c'est qu'il faut vérifier les noms de chaque objet dans l'objet carte, et donc c'est super long... sans compter qu'il faut
faire des conditions pour chaque nom d'unité.
J'ai fait une 1e modification plus simple au niveau de Un_Tour_Du_Joueur à ce propos, au niveau de la méthode bouger().

*Je pense que les méthodes Spawn_Wave devraient être mises au niveau des fichiers Unites.

POINT IMPORTANT A NOTER!!
Les self._carte dans les classes Unites_Humain_Attaquant et Unites_Humain_Defenseur sont mises à jour automatiquement, à chaque
modification de self._carte ou de carte dans une classe quelconque. Bref, créer un objet self._carte ne crée pas une nouvelle 
carte au sein des classes filles : il n'y a donc pas besoin d'un mécanisme de MAJ.


Modification majeure : 

- Débugage diverses, suite à l'ajout de la classe Un_Tour_Joueur.
Il y a encore pas mal de bugs à régler d'ailleurs.

- Création de liens entre la classe Map et Partie!
Là ça devient costaud. Le gros soucis actuel, c'est l'absence de liens entre ces classes. C'est responsable de pas mal de trucs
qui vont poser problèmes par la suite (au niveau de l'attribution de chaque unité IA à son joueur, dans sa liste d'unité 
correspondante; pour le déroulement des tours ...).
J'ai commencé à créer ces liens, notamment en redéfinissant le choix de niveau dans Partie et en faisant en sorte que
la simulation ait lieu dans Partie. Mais c'est encore énoooormément buggé, rien que dans le passage d'un tour. Il faut
à tout prix arranger ça.

Sur les fichiers d'unité humaines :

- Régler le bug où la sous-carte n'était pas mise à jour suite aux déplacements d'unités.

- Mise en place d'une liste donnant les déplacements possibles.

Sur le fichier batiments : 

- Ajouté un T_car au niveau de QG.

26/03 - XV25 : 

Sur les fichiers d'unités humaines : 

Légère modification des méthodes de déplacement.

NB : les tests se font désormais au niveau du fichier Partie.

26/03 - Clome21
  J'ai déposé les fichiers modifier aujourd'hui, il ne semble pas y avoir de pb
  
  MAJ Création de 3 classes distinct (Unité_IA_Facile,Unité_IA_Moyenne,Unité_IA_Difficile) avec des fonction mvt_poss qui leur sont propres
pour l'instant seul les 2 premieres sont opérationnelles. Ainsi que Scorpion0, Scorpion1, Scorpion2
  MAJ utilisation de la ss carte pour l'apparition est le déplacement de tous nos objets en jeu (metal, Unité_IA, Batiment, etc) en théorie
aucune collision se fait.
  MAJ fixe du nombre d'unité qui spawn par vague. Limité à la capacité de nos zones de spawn (/)
J'ai renomé L_vide par L_dep_poss, pour Unité_IA_Facile,Unité_IA_Moyenne,Unité_IA_Difficile (plus logique à mon sens)
  
  - Tentative de déboguage (petite avancée), bloqué par:
  \Un_Tour_Joueur.py", line 37, in placer_une_foreuse
    self._carte.L_joueur.L_batiment.append(U)
    AttributeError: 'list' object has no attribute 'L_batiment'
    
    J'ai pensé qu'il fallait que je rajoute L_batiment dans Partie commme L_ennemi mais ça ne change rien donc j'ai pas fait. Je comprends pas
  tous dans Partie donc je préfère pas trop y toucher.
  
  
  De plus, pour l'instant le jeu tournera uniquement pour Niveau0, je me suis focus sur le fonctionnement d'au moins 1 lvl.
  
  27/03 - Clome21
  
  MAJ insertion d'une méthode pour placer des unités si role = défenseur ou attaquant.

27/03 - XV25

Débogages divers (sur les méthodes bouger et combat).
Mise en place des murs au sein de la sous-map.
Ajout d'un T_car pour le métal.

Idée test : vérifier si, lorsqu'on met un nombre au hasard dans bouger, que celui-ci soit bien refusé.

30/03 - XV25

Attention bug : des métaux peuvent apparaître dans la zone d'apparition des unités attaquantes.

02/04 - XV25

MAJ Majeure

-Mise en place des méthodes de production d'unités, pour les joueurs Humains et l'IA facile.
C'est pas encore terminé, il reste pas mal de bugs qu'il faut résoudre.

Au final, autant tout laisser dans un tour joueur, c'est plus simple.

- Déplacement de la méthode de choix de difficulté de l'IA.
Elle est maintenant dans Partie, et ne s'active que si on met un nombre d'IA en entrée.

-Mise à jour des méthodes de recherche de position vide.
J'ai utilisé la fonction "where" pour cela. 

-Mise à jour du choix d'une position au hasard.
J'ai utilisé randint pour cela; choice ne semble pas fonctionner pour les listes de couples de coordonnées (type [(i,j]).

Idée test : vérifier que les bâtiments sont bien produits aux endroits indiqués, et qu'il est impossible d'en produire hors
de la zone.

6/04 - XV25

Débogage des joueurs Humains terminé! Le jeu est fonctionnel, même si il manque encore les méthodes décès et fin de partie.
Il faut aussi encore tester les joueurs IA.

J'ai joué un peu. De ce qui me semble, les unités ne se déplacent pas assez vite pour le moment, ou le terrain est trop grand;
donc c'est suuuuper long à jouer.
L'équilibrage est également aux fraises pour le moment; en 5 tours, le défenseur a tellement de ressources que ça en devient
ridicule.

Mais le plus lourd pour le moment, c'est de ne pas avoir de vision globale de jeu; c'est chiant pour déplacer les unités,
et savoir précisément où on peut aller. ça serait mieux si on développait dès maintenant une interface graphique.

Si tu veux bien, tu pourrais commencer ça stp? Je m'occuperais d'ajouter les dernières méthodes.

8/04 - XV25

Les méthodes de décès (sous le nom disparition) et les possibilités de fin de partie ont été ajoutées.
Les IA semblent également fonctionnelles.
Il ne reste qu'un seul bug pour le moment : le jeu ne se termine pas directement quand le QG est détruit. Il faut attendre
que toutes les unités de l'attaquant aient finies de bouger pour que le jeu se termine. Il faut encore que je règle ça.

11/04 - Clome21
J'ai fait l'interface graphique (Minima.ui et Minima.py) avec les différentes fenetre qui s'ouvrent et se ferment, je suis assez fier de moi (même si j'avoue j'en ai chier).
Faudra que tu me dise si çate va ou si j'ai oublier des buttons, option, etc... Car je ne pourrais pas réutiliser qtdesigner si je link l'interface au code
Si il n'y a rien à ajouter je m'occuperais de relier les boutons à notre code.

11/04 - XV25

Correction des bugs liés à la fin de la partie.
Ajout d'une modification dans la classe Constante; désormais, la taille des zones de construction et d'apparition d'ennemis
dépendent directement de la taille de la map.
Identification et correction de bugs de position des zones de construction au niveau de la sous-carte.

18/04 - XV25

Correction de bugs divers.
Simplification de la méthode de placement de ressources.
Mise en place des méthodes de save/load : fonctionnelles pour les humains uniquement.
